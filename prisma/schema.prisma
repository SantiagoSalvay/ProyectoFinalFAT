// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TipoUsuario {
  tipo_usuario          Int      @id @default(autoincrement())
  nombre_tipo_usuario   String   @db.VarChar(255)
  usuarios             Usuario[]
}

model Usuario {
  id_usuario    Int      @id @default(autoincrement())
  usuario       String   @db.VarChar(255)
  telefono      String   @db.VarChar(255)
  correo        String   @db.VarChar(255)
  contrasena    String   @db.VarChar(255)
  tipo_usuario  Int
  nombre        String?  @db.VarChar(255)
  apellido      String?  @db.VarChar(255)
  ubicacion     String?  @db.VarChar(255)
  createdAt     DateTime @default(now())
  tipo          TipoUsuario @relation(fields: [tipo_usuario], references: [tipo_usuario])
  foros         Foro[]
  respuestas    RespuestaForo[]
  pedidos       PedidoDonacion[]
}

model Foro {
  id_foro       Int      @id @default(autoincrement())
  id_usuario    Int
  titulo        String   @db.VarChar(255)
  descripcion   String   @db.VarChar(255)
  fecha         DateTime @db.Date
  usuario       Usuario  @relation(fields: [id_usuario], references: [id_usuario])
  respuestas    RespuestaForo[]
  foroCategorias ForoCategoria[]
}

model RespuestaForo {
  id_respuesta Int      @id @default(autoincrement())
  id_foro      Int
  id_usuario   Int
  mensaje      String   @db.VarChar(255)
  fecha        DateTime @db.Date
  foro         Foro     @relation(fields: [id_foro], references: [id_foro])
  usuario      Usuario  @relation(fields: [id_usuario], references: [id_usuario])
}

model Categoria {
  id_categoria   Int    @id @default(autoincrement())
  etiqueta       String @db.VarChar(255)
  foroCategorias ForoCategoria[]
}

model ForoCategoria {
  id_foro_categoria Int @id @default(autoincrement())
  id_foro          Int
  id_categoria     Int
  num_me_gusta     Int @default(0)
  foro             Foro      @relation(fields: [id_foro], references: [id_foro])
  categoria        Categoria @relation(fields: [id_categoria], references: [id_categoria])
}

model Donacion {
  id_donacion     Int    @id @default(autoincrement())
  tipo_donacion   String @db.VarChar(255)
  descripcion     String @db.VarChar(255)
  puntos          Int
  pedidos         PedidoDonacion[]
}

model PedidoDonacion {
  id_pedido          Int      @id @default(autoincrement())
  id_foro            Int
  id_usuario         Int
  id_donacion        Int
  descripcion        String   @db.VarChar(255)
  cantidad           Int
  fecha              DateTime @db.Date
  usuario            Usuario  @relation(fields: [id_usuario], references: [id_usuario])
  donacion           Donacion @relation(fields: [id_donacion], references: [id_donacion])
  rankings           Ranking[]
}

model TipoRanking {
  id_tipo_ranking Int    @id @default(autoincrement())
  tipo_ranking    String @db.VarChar(255)
  rankings        Ranking[]
}

model Ranking {
  id_ranking      Int    @id @default(autoincrement())
  id_tipo_ranking Int
  id_pedido       Int
  puesto          Int
  puntos          Int
  tipoRanking     TipoRanking     @relation(fields: [id_tipo_ranking], references: [id_tipo_ranking])
  pedido          PedidoDonacion  @relation(fields: [id_pedido], references: [id_pedido])
}